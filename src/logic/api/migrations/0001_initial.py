# Generated by Django 5.1.5 on 2025-01-27 03:39

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FlashcardSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('views_count', models.IntegerField(default=0)),
                ('is_archived', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'flashcardsets',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password_hash', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Flashcard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcards', to='api.flashcardset')),
            ],
            options={
                'db_table': 'flashcards',
            },
        ),
        migrations.CreateModel(
            name='FlashcardSetStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flashcards_viewed', models.IntegerField(default=0)),
                ('total_study_time', models.DurationField(default=datetime.timedelta(0))),
                ('set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcard_set_stats_set', to='api.flashcardset')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcard_set_stats_user', to='api.user')),
            ],
            options={
                'db_table': 'flashcardsetstats',
            },
        ),
        migrations.AddField(
            model_name='flashcardset',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcard_sets', to='api.user'),
        ),
        migrations.CreateModel(
            name='FlashcardSetTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcard_set_tags', to='api.flashcardset')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_flashcard_sets', to='api.tag')),
            ],
            options={
                'db_table': 'flashcardsettags',
                'unique_together': {('set', 'tag')},
            },
        ),
        migrations.CreateModel(
            name='FlashcardStatsStages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_count', models.IntegerField(default=0)),
                ('stage', models.IntegerField(default=1)),
                ('learned', models.BooleanField(default=False)),
                ('flashcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcardstatsstages', to='api.flashcard')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcardstatsstages', to='api.user')),
            ],
            options={
                'db_table': 'flashcardstatsstages',
                'unique_together': {('user', 'flashcard')},
            },
        ),
        migrations.CreateModel(
            name='FlashcardStatsSimple',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_count', models.IntegerField(default=0)),
                ('flashcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcardstatssimple', to='api.flashcard')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcardstatssimple', to='api.user')),
            ],
            options={
                'db_table': 'flashcardstatssimple',
                'unique_together': {('id', 'flashcard')},
            },
        ),
        migrations.CreateModel(
            name='FlashcardStatsPercent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_count', models.IntegerField(default=0)),
                ('learning_stage', models.CharField(choices=[('not_learned', 'Not Learned'), ('still_learning', 'Still Learning'), ('almost_learned', 'Almost Learned'), ('learned', 'Learned')], default='not_learned', max_length=20)),
                ('flashcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcardstatspercent', to='api.flashcard')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcardstatspercent', to='api.user')),
            ],
            options={
                'db_table': 'flashcardstatspercent',
                'unique_together': {('user', 'flashcard')},
            },
        ),
        migrations.CreateModel(
            name='FlashcardSetFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='api.flashcardset')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_flashcard_sets', to='api.user')),
            ],
            options={
                'db_table': 'flashcardsetfavorites',
                'unique_together': {('user', 'set')},
            },
        ),
        migrations.CreateModel(
            name='FlashcardFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flashcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='api.flashcard')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_flashcards', to='api.user')),
            ],
            options={
                'db_table': 'flashcardfavorites',
                'unique_together': {('user', 'flashcard')},
            },
        ),
    ]
